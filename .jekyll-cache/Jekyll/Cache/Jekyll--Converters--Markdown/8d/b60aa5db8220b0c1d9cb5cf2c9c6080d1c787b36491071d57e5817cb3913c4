I"&<h1 id="baekjoon-2798-bruteforce">BaekJoon 2798 [BruteForce]</h1>
<hr />

<h3 id="블랙잭">블랙잭</h3>

<p><a href="https://www.acmicpc.net/problem/2798">BaekJoon2798</a></p>

<p>블랙잭 알고리즘은 BruteForce유형의 문제중에서 가장 대표적인 문제라고 볼 수 있다.
위 링크에 문제와 입력 및 출력 예시가 있으니 참고하면 될 것 같다.
먼저 Python 코드다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#BlackJack - BaekJoon - 2798
</span><span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">()</span> <span class="c1"># 3 &lt;= n &lt;= 100,  # 10 &lt;= M &lt;= 300,000
</span><span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">N</span><span class="p">)</span> <span class="c1"># 문자열 타입을 정수형으로 변환
</span><span class="n">M</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">M</span><span class="p">)</span> <span class="c1"># 각각 카드의 개수와 카드의 합을 입력받는다.
</span>
<span class="n">j_j</span> <span class="o">=</span> <span class="mi">0</span>    <span class="c1">#각 시작하는 index번호를 지정
</span><span class="n">y_y</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">k_k</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">list_num</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span>  <span class="c1"># 각 카드의 합을 임시 버퍼로 저장
</span><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>   <span class="c1"># M과 가장 가까우면서 temp보다 큰 값
</span><span class="n">list_num</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">().</span><span class="n">strip</span><span class="p">().</span><span class="n">split</span><span class="p">()]</span>
<span class="c1"># for i in range(N):
#     list_num.append(int(input()))
</span><span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">list_num</span><span class="p">[</span><span class="n">j_j</span><span class="p">:</span><span class="nb">len</span><span class="p">(</span><span class="n">list_num</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="p">]:</span>
    <span class="n">y_y</span> <span class="o">=</span> <span class="n">j_j</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">list_num</span><span class="p">[</span><span class="n">y_y</span><span class="p">:</span><span class="nb">len</span><span class="p">(</span><span class="n">list_num</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
        <span class="n">k_k</span> <span class="o">=</span> <span class="n">y_y</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">list_num</span><span class="p">[</span><span class="n">k_k</span><span class="o">+</span><span class="mi">2</span><span class="p">:]:</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">k</span>
            <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">&lt;=</span> <span class="n">M</span> <span class="ow">and</span> <span class="n">temp</span> <span class="o">&gt;</span> <span class="nb">sum</span> <span class="p">):</span>
                <span class="nb">sum</span> <span class="o">=</span> <span class="n">temp</span>
    <span class="n">j_j</span> <span class="o">=</span> <span class="n">j_j</span> <span class="o">+</span> <span class="mi">1</span>    
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>      
</code></pre></div></div>
<p>더 간단하게 구현할 수 있었을 것 같아 생각을 계속 해봤는데 아직 더 좋은 아이디어가 생각나지 않았다…
 # for i in range(N):
 #     list_num.append(int(input()))
위와 같이 각각의 카드의 값들을 입력받으려고 했지만 백준에서 제공하는 예제와 어긋나는 바람에 다른 방식으로 입력 받았다.</p>

<p>C언어로는 아이디어가 바로 떠올랐는데, Python에서는 리스트에 인덱스 값에 접근하는 법을 잘 몰라서 시간이 오래 걸렸던 것 같다.</p>

<p>그래서 C언어로도 구현해봤다!</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
</span><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">,</span> <span class="n">temp</span><span class="p">,</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">N</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">M</span><span class="p">);</span>

	<span class="kt">int</span><span class="o">*</span> <span class="n">list_num</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="o">*</span> <span class="n">N</span><span class="p">);</span>  <span class="c1">// 카드 개수 N 만큼 할당</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
		<span class="n">scanf_s</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">list_num</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>

	<span class="c1">// Burte Force 시작</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
				<span class="n">temp</span> <span class="o">=</span> <span class="n">list_num</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">list_num</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">list_num</span><span class="p">[</span><span class="n">k</span><span class="p">];</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">temp</span> <span class="o">&lt;=</span> <span class="n">M</span> <span class="o">&amp;&amp;</span> <span class="n">temp</span> <span class="o">&gt;</span> <span class="n">sum</span><span class="p">)</span> <span class="p">{</span>
					<span class="n">sum</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="n">sum</span><span class="p">);</span>
	<span class="n">free</span><span class="p">(</span><span class="n">list_num</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET